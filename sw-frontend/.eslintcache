[{"C:\\Users\\jsadler\\Documents\\projects-1\\assign-1-frontend\\sw-frontend\\src\\index.js":"1","C:\\Users\\jsadler\\Documents\\projects-1\\assign-1-frontend\\sw-frontend\\src\\App.js":"2","C:\\Users\\jsadler\\Documents\\projects-1\\assign-1-frontend\\sw-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\jsadler\\Documents\\projects-1\\assign-1-frontend\\sw-frontend\\src\\Search.js":"4","C:\\Users\\jsadler\\Documents\\projects-1\\assign-1-frontend\\sw-frontend\\src\\components\\Person.js":"5","C:\\Users\\jsadler\\Documents\\projects-1\\assign-1-frontend\\sw-frontend\\src\\Deck.js":"6","C:\\Users\\jsadler\\Documents\\projects-1\\assign-1-frontend\\sw-frontend\\src\\components\\Addcard.js":"7","C:\\Users\\jsadler\\Documents\\projects-1\\assign-1-frontend\\sw-frontend\\src\\components\\Adddeck.js":"8"},{"size":500,"mtime":1637771036085,"results":"9","hashOfConfig":"10"},{"size":10741,"mtime":1638548127018,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1637701769809,"results":"12","hashOfConfig":"10"},{"size":10457,"mtime":1638548744570,"results":"13","hashOfConfig":"10"},{"size":7075,"mtime":1638539833960,"results":"14","hashOfConfig":"10"},{"size":898,"mtime":1638537587677,"results":"15","hashOfConfig":"10"},{"size":3376,"mtime":1638547614127,"results":"16","hashOfConfig":"10"},{"size":2271,"mtime":1638548564403,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"h3c144",{"filePath":"21","messages":"22","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"20"},"C:\\Users\\jsadler\\Documents\\projects-1\\assign-1-frontend\\sw-frontend\\src\\index.js",[],["41","42"],"C:\\Users\\jsadler\\Documents\\projects-1\\assign-1-frontend\\sw-frontend\\src\\App.js",["43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65"],"import { useState, useEffect } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport Search from './Search'\n\n/* \n    <Search/>\n\n*/\n\nimport Deck from './Deck'\n\nimport Addcard from './components/Addcard'\n\nimport Adddeck from './components/Adddeck'\n\nimport Person from './components/Person'\n\nconst App = () => {\n\n\n  const [pagecount, setPageCount] = useState(1);\n\n  const page1 = [1,2,3,4,5,6,7,8,9]\n  //17\n  const page2 = [10,11,12,13,14,15,16,18,19]\n  const page3 = [20,21,22,23,24,25,26,27,28,29]\n  const page4 = [30,31,32,33,34,35,36,37,38,39]\n  const page5 = [40,41,42,43,44,45,46,47,48,49]\n  const page6 = [50,51,52,53,54,55,56,57,58,59]\n  const page7 = [60,61,62,63,64,65,66,67,68,69]\n  const page8 = [70,71,72,73,74,75,76,77,78,79]\n  const page9 =[80,81,82,83]\n\n  const [pageall, setPageAll] = useState([...page1])\n\n  const [singlecard, setSingleCard] = useState()\n\n  const [showAddcard, setShowAddcard] = useState(false)\n  const [showAdddeck, setShowAdddeck] = useState(false)\n  //const [people, setPeople] = useState([])\n  const [cards, setcards] = useState([])\n\n  const handleIncrease = () => {\n    if(pagecount<=9){\n      console.log(pagecount)\n    setPageCount(pagecount + 1)\n    }\n  }\n\n  const handleDecrease = () => {\n    if(pagecount>=1){\n    setPageCount(pagecount - 1)\n    }\n  }\n  \n  const sendSingleCard = (idc) =>{\n    setSingleCard(idc);\n  }\n\n  useEffect(() => {\n    const getPages = (pagecount) =>{\n      if(pagecount == 1 ){\n        setPageAll([...page1])\n      } else if(pagecount == 2 ) {\n        setPageAll([...page1, ...page2])\n      } else if(pagecount == 3 ) {\n        setPageAll([...page1, ...page2, ...page3])\n      } else if(pagecount == 4 ) {\n        setPageAll([...page1, ...page2, ...page3, ...page4])\n      } else if(pagecount == 5 ) {\n        setPageAll([...page1, ...page2, ...page3, ...page4, ...page5])\n      } else if(pagecount == 6 ) {\n        setPageAll([...page1, ...page2, ...page3, ...page4, ...page5, ...page6])\n      } else if(pagecount == 7 ) { \n        setPageAll([...page1, ...page2], ...page3, ...page4, ...page5, ...page6, ...page7)\n      } else if(pagecount == 8 ) {  \n        setPageAll([...page1, ...page2], ...page3, ...page4, ...page5, ...page6, ...page7, ...page8)\n      } else if(pagecount == 9 ) {\n        setPageAll([...page1, ...page2], ...page3, ...page4, ...page5, ...page6, ...page7, ...page8, ...page9)\n      }\n    }\n    \n    getPages(pagecount)\n\n  }, [pagecount])\n\n  useEffect(() => {\n\n    /*\n    const getcards = async () => {\n      const cardsFromServer = await fetchcards()\n      setcards(cardsFromServer)\n    }\n\n    getcards()\n    */\n  }, [])\n\n  // Fetch cards\n  const fetchcards = async () => {\n    const res = await fetch('http://localhost:5000/cards')\n    const data = await res.json()\n\n    return data\n  }\n\n  // Fetch card\n  const fetchcard = async (id) => {\n    const res = await fetch(`http://localhost:5000/cards/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n\n  // Add card\n  const addcard = async (card) => {\n    //const res = await fetch('http://localhost:5000/deckscreate', {\n    const res = await fetch('http://localhost:5000/addcardtodecks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(card),\n    })\n\n    const data = await res.json()\n\n    setcards([...cards, data])\n\n    // const id = Math.floor(Math.random() * 10000) + 1\n    // const newcard = { id, ...card }\n    // setcards([...cards, newcard])\n  }\n\n    // Add card\n    const adddeck = async (card) => {\n      const res = await fetch('http://localhost:5000/deckscreate', {\n      //const res = await fetch('http://localhost:5000/deckscreate', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify(card),\n      })\n  \n      const data = await res.json()\n  \n      setcards([...cards, data])\n  \n      // const id = Math.floor(Math.random() * 10000) + 1\n      // const newcard = { id, ...card }\n      // setcards([...cards, newcard])\n    }\n  // Delete card\n  const deletecard = async (id) => {\n    const res = await fetch(`http://localhost:5000/cards/${id}`, {\n      method: 'DELETE',\n    })\n    //We should control the response status to decide if we will change the state or not.\n    res.status === 200\n      ? setcards(cards.filter((card) => card.id !== id))\n      : alert('Error Deleting This card')\n  }\n\n  // Toggle Reminder\n  const toggleReminder = async (id) => {\n    const cardToToggle = await fetchcard(id)\n    const updcard = { ...cardToToggle, reminder: !cardToToggle.reminder }\n\n    const res = await fetch(`http://localhost:5000/cards/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(updcard),\n    })\n\n    const data = await res.json()\n\n    setcards(\n      cards.map((card) =>\n        card.id === id ? { ...card, reminder: data.reminder } : card\n      )\n    )\n  }\n\n\n  return (\n      <Router>\n      <Switch>\n\n      <Route path=\"/deck\">\n\n      <div id=\"modal-add-deck\">\n            {showAdddeck && <Adddeck onAdd={adddeck} />}\n          </div>\n\n  <div className=\"all-content\">\n        \n        <div className=\"panel-1\">\n  \n          <Link to ='/'>\n          <div className=\"button button-1\" style={{ textDecoration: 'none' }}>\n            <img className=\"icon\" src=\"img/Card.svg\" />\n            <div className=\"roboto-normal-onyx-16px text\">All Cards</div>\n          </div> \n          </Link>\n          \n          <Link to ='/deck'>\n          <div className=\"button button-2\">\n            <img className=\"icon\" src=\"img/Deck.svg\" />\n            <div className=\"roboto-normal-onyx-16px text\">Decks</div>\n          </div> \n          </Link>\n          \n          <div className=\"main-title\">\n            <div className=\"color2\">SW-API Deck Builder</div>\n          </div> \n  \n          <div className=\"button button-3\">\n  \n            <div className=\"roboto-normal-onyx-16px text callbackname-notes \"></div>\n          </div>\n  \n        </div>\n        \n        <div className=\"seperator-1\">\n        </div>\n  \n  \n        <div className=\"breadcrumb\">\n          <div className=\"text-abc-1 roboto-normal-sonic-silver-16px\" >Deck</div>\n          <img className=\"icon-abc-1\" src=\"img/breadcumb-temp@2x.svg\"/>\n          <div className=\"text-abc-2 roboto-normal-mountain-mist-16px\">Select a Deck</div>\n          <button style={{marginLeft:\"900px\"}} onClick={() => { setShowAdddeck(!showAdddeck)}}>+</button>\n        </div>      \n  \n        <div className=\"flex-container-a1\">\n  \n              <form className=\"search flex-item-left-a1\">\n                <input className=\"search-text-1 roboto-normal-pink-swan-16px\" type=\"text\" id=\"search\" name=\"search\" value=\"Search\" />\n                <img className=\"icons\" src=\"img/Search.svg\"/>\n              </form>\n  \n  \n              <div className=\"sort roboto-normal-onyx-16px flex-item-right-a1\" style={{display:\"none\"}}>\n                <div className=\"text-1\">Sort by</div>\n                \n                <form className=\"sort-form\">\n  \n                  <select className=\"card-filter border-1px-pink-swan\" id=\"cars\" name=\"cars\">\n                    <option value=\"Homeworld\">Homeworld</option>\n                  </select>\n  \n                </form>\n  \n                <div className=\"card-filter-buts\">\n                  {/*<img onClick={ascorder} className=\"label-sort-by-img-1\" src=\"img/asc@2x.svg\" />*/}\n                  {/*<img onClick={dscorder} className=\"label-sort-by-img-2\" src=\"img/desc@2x.svg\" />*/} \n                </div>\n              </div>\n  \n        </div>\n        \n\n        <div className=\"frame-abc-1\">\n                  <Deck />\n        </div>\n                  \n        \n\n  </div>\n\n\n      </Route>\n\n      <Route path='/' exact>\n\n      <div id=\"modal-add-card\">\n            {showAddcard && <Addcard cardida={singlecard} onAdd={addcard} />}\n          </div>\n\n    <div className=\"all-content\">\n        \n        <div className=\"panel-1\">\n\n          <Link to ='/'>\n          <div className=\"button button-1\" style={{ textDecoration: 'none' }}>\n            <img className=\"icon\" src=\"img/Card.svg\" />\n            <div className=\"roboto-normal-onyx-16px text\">All Cards</div>\n          </div> \n          </Link>\n\n          <Link to ='/deck'>\n          <div className=\"button button-2\">\n            <img className=\"icon\" src=\"img/Deck.svg\" />\n            <div className=\"roboto-normal-onyx-16px text\">Decks</div>\n          </div> \n          </Link>\n\n          <div className=\"main-title\">\n            <div className=\"color2\">SW-API Deck Builder</div>\n          </div> \n  \n          <div className=\"button button-3\">\n  \n            <div className=\"roboto-normal-onyx-16px text callbackname-notes \">Luke Skywalker</div>\n          </div>\n  \n        </div>\n        \n        <div className=\"seperator-1\">\n        </div>\n  \n  \n        <div className=\"breadcrumb\">\n          <div className=\"text-abc-1 roboto-normal-sonic-silver-16px\" >All Cards</div>\n          <img className=\"icon-abc-1\" src=\"img/breadcumb-temp@2x.svg\"/>\n          <div className=\"text-abc-2 roboto-normal-mountain-mist-16px\">Select a card</div>\n        </div>      \n  \n        <div className=\"flex-container-a1\">\n  \n              <form className=\"search flex-item-left-a1\">\n                <input className=\"search-text-1 roboto-normal-pink-swan-16px\" type=\"text\" id=\"search\" name=\"search\" value=\"Search\" />\n                <img className=\"icons\" src=\"img/Search.svg\"/>\n              </form>\n  \n  \n              <div className=\"sort roboto-normal-onyx-16px flex-item-right-a1\" style={{display:\"none\"}}>\n                <div className=\"text-1\">Sort by</div>\n                \n                <form className=\"sort-form\">\n  \n                  <select className=\"card-filter border-1px-pink-swan\" id=\"cars\" name=\"cars\">\n                    <option value=\"Homeworld\">Homeworld</option>\n                  </select>\n  \n                </form>\n  \n                <div className=\"card-filter-buts\">\n                  {/*<img onClick={ascorder} className=\"label-sort-by-img-1\" src=\"img/asc@2x.svg\" />*/}\n                  {/*<img onClick={dscorder} className=\"label-sort-by-img-2\" src=\"img/desc@2x.svg\" />*/} \n                </div>\n              </div>\n  \n        </div>\n\n        <div className=\"frame-abc-1\">\n        {pageall.map((index) => (\n                <Person key={index} ida = {index} onAdd={() => { setShowAddcard(!showAddcard); sendSingleCard(index); }} />\n                ))}\n        </div>\n\n\n        <button className=\"fixedElement\" onClick={handleIncrease}>Load More</button>\n    </div>\n      </Route>\n      </Switch>\n  \n      </Router>\n  \n    )\n  }\n  \n  export default App\n","C:\\Users\\jsadler\\Documents\\projects-1\\assign-1-frontend\\sw-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\jsadler\\Documents\\projects-1\\assign-1-frontend\\sw-frontend\\src\\Search.js",["66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95"],"import { useState, useEffect } from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport Deck from './Deck'\r\n\r\nimport Addcard from './components/Addcard'\r\n\r\nimport Person from './components/Person'\r\n\r\nconst Search = () => {\r\n\r\n    const [pagecount, setPageCount] = useState(1);\r\n\r\n    const page1 = [1,2,3,4,5,6,7,8,9]\r\n    //17\r\n    const page2 = [10,11,12,13,14,15,16,18,19]\r\n    const page3 = [20,21,22,23,24,25,26,27,28,29]\r\n    const page4 = [30,31,32,33,34,35,36,37,38,39]\r\n    const page5 = [40,41,42,43,44,45,46,47,48,49]\r\n    const page6 = [50,51,52,53,54,55,56,57,58,59]\r\n    const page7 = [60,61,62,63,64,65,66,67,68,69]\r\n    const page8 = [70,71,72,73,74,75,76,77,78,79]\r\n    const page9 =[80,81,82,83]\r\n\r\n    const [pageall, setPageAll] = useState([...page1])\r\n\r\n    const [singlecard, setSingleCard] = useState()\r\n\r\n    const [showAddcard, setShowAddcard] = useState(false)\r\n    //const [people, setPeople] = useState([])\r\n    const [cards, setcards] = useState([])\r\n\r\n    const handleIncrease = () => {\r\n      if(pagecount<=9){\r\n        console.log(pagecount)\r\n      setPageCount(pagecount + 1)\r\n      }\r\n    }\r\n  \r\n    const handleDecrease = () => {\r\n      if(pagecount>=1){\r\n      setPageCount(pagecount - 1)\r\n      }\r\n    }\r\n    \r\n    const sendSingleCard = (idc) =>{\r\n      setSingleCard(idc);\r\n    }\r\n\r\n    useEffect(() => {\r\n      const getPages = (pagecount) =>{\r\n        if(pagecount == 1 ){\r\n          setPageAll([...page1])\r\n        } else if(pagecount == 2 ) {\r\n          setPageAll([...page1, ...page2])\r\n        } else if(pagecount == 3 ) {\r\n          setPageAll([...page1, ...page2, ...page3])\r\n        } else if(pagecount == 4 ) {\r\n          setPageAll([...page1, ...page2, ...page3, ...page4])\r\n        } else if(pagecount == 5 ) {\r\n          setPageAll([...page1, ...page2, ...page3, ...page4, ...page5])\r\n        } else if(pagecount == 6 ) {\r\n          setPageAll([...page1, ...page2, ...page3, ...page4, ...page5, ...page6])\r\n        } else if(pagecount == 7 ) { \r\n          setPageAll([...page1, ...page2], ...page3, ...page4, ...page5, ...page6, ...page7)\r\n        } else if(pagecount == 8 ) {  \r\n          setPageAll([...page1, ...page2], ...page3, ...page4, ...page5, ...page6, ...page7, ...page8)\r\n        } else if(pagecount == 9 ) {\r\n          setPageAll([...page1, ...page2], ...page3, ...page4, ...page5, ...page6, ...page7, ...page8, ...page9)\r\n        }\r\n      }\r\n      \r\n      getPages(pagecount)\r\n\r\n    }, [pagecount])\r\n\r\n    useEffect(() => {\r\n\r\n      /*\r\n      const getcards = async () => {\r\n        const cardsFromServer = await fetchcards()\r\n        setcards(cardsFromServer)\r\n      }\r\n  \r\n      getcards()\r\n      */\r\n    }, [])\r\n  \r\n    // Fetch cards\r\n    const fetchcards = async () => {\r\n      const res = await fetch('http://localhost:5000/cards')\r\n      const data = await res.json()\r\n\r\n      return data\r\n    }\r\n\r\n    // Fetch card\r\n    const fetchcard = async (id) => {\r\n      const res = await fetch(`http://localhost:5000/cards/${id}`)\r\n      const data = await res.json()\r\n\r\n      return data\r\n    }\r\n\r\n\r\n    // Add card\r\n    const addcard = async (card) => {\r\n      const res = await fetch('http://localhost:5000/cards', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify(card),\r\n      })\r\n  \r\n      const data = await res.json()\r\n  \r\n      setcards([...cards, data])\r\n  \r\n      // const id = Math.floor(Math.random() * 10000) + 1\r\n      // const newcard = { id, ...card }\r\n      // setcards([...cards, newcard])\r\n    }\r\n  \r\n    // Delete card\r\n    const deletecard = async (id) => {\r\n      const res = await fetch(`http://localhost:5000/cards/${id}`, {\r\n        method: 'DELETE',\r\n      })\r\n      //We should control the response status to decide if we will change the state or not.\r\n      res.status === 200\r\n        ? setcards(cards.filter((card) => card.id !== id))\r\n        : alert('Error Deleting This card')\r\n    }\r\n  \r\n    // Toggle Reminder\r\n    const toggleReminder = async (id) => {\r\n      const cardToToggle = await fetchcard(id)\r\n      const updcard = { ...cardToToggle, reminder: !cardToToggle.reminder }\r\n  \r\n      const res = await fetch(`http://localhost:5000/cards/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify(updcard),\r\n      })\r\n  \r\n      const data = await res.json()\r\n  \r\n      setcards(\r\n        cards.map((card) =>\r\n          card.id === id ? { ...card, reminder: data.reminder } : card\r\n        )\r\n      )\r\n    }\r\n\r\n\r\n    return (\r\n      <Router>\r\n\r\n        <Switch>\r\n\r\n\r\n        <Route path=\"/deck\">\r\n            {/*<Deck />*/}\r\n          </Route>\r\n\r\n        <Route path='/' exact>\r\n\r\n          <>\r\n          \r\n            <div id=\"modal-add-card\">\r\n              {showAddcard && <Addcard cardida={singlecard} onAdd={addcard} />}\r\n            </div>\r\n          \r\n          </>\r\n\r\n          <>\r\n\r\n          <div className=\"container-center-horizontal\" id=\"modal-below-card\">\r\n            <div className=\"all-cards-desktop screen\">\r\n              <div className=\"header\">\r\n                <div className=\"menu\">\r\n                  <div className=\"buttons\">\r\n                    <div className=\"all-cards-but\">\r\n                      <div className=\"icon\">\r\n                        <div className=\"overlap-group\">\r\n                          <img className=\"vector\" src=\"img/vector-35@2x.svg\" />\r\n                          <img className=\"vector-1\" src=\"img/vector-36@2x.svg\" />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"all-cards roboto-normal-onyx-16px\">All Cards</div>\r\n                    </div>\r\n                    <div className=\"decks-but\">\r\n                      <div className=\"icon-1\">\r\n                        <div className=\"overlap-group-2\">\r\n                          <img className=\"vector-8\" src=\"img/vector-37@2x.svg\" />\r\n                          <img className=\"vector-9\" src=\"img/vector-38@2x.svg\" />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"decks roboto-normal-onyx-16px\"><Link to=\"/deck\"><button>Decks</button></Link></div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"page-title\">SW-API Deck Builder</div>\r\n                  <div className=\"name-title border-1px-pink-swan\">\r\n                    <div className=\"name roboto-normal-onyx-16px\">Name</div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"seperator\"></div>\r\n              </div>\r\n              <div className=\"content\">\r\n                <div className=\"overlap-group2\" style={{\"marginBottom\":\"50px\"}}>\r\n                  <div className=\"bread-crumb-a-child roboto-normal-mountain-mist-16px\">Select a card</div>\r\n                  <div className=\"bread-crumb-arrow-b\"><img className=\"vector-2\" src=\"img/vector-33@2x.svg\" /></div>\r\n                  <div className=\"bread-crumb-a-child-1 roboto-normal-mountain-mist-16px\">Select a card</div>\r\n                  <div className=\"bread-crumb-arrow-a\"><img className=\"vector-2\" src=\"img/vector-33@2x.svg\" /></div>\r\n                  <div className=\"bread-crumb-a-parent roboto-normal-sonic-silver-16px\">All Cards</div>\r\n                </div>\r\n                <div className=\"query\">\r\n                  <div className=\"input-feild\">\r\n                    <div className=\"text roboto-normal-sonic-silver-16px\">Search</div>\r\n                    <div className=\"search-icon\">\r\n                      <div className=\"overlap-group-3\">\r\n                        <img className=\"vector-10\" src=\"img/vector-5@2x.svg\" />\r\n                        <img className=\"vector-11\" src=\"img/vector-32@2x.svg\" />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"query-buttons\">\r\n                    <div className=\"but-c border-1px-pink-swan\"><div className=\"but-c-text roboto-normal-onyx-16px\">A to Z</div></div>\r\n                    <div className=\"but-b\"><div className=\"but-b-text roboto-normal-onyx-16px\">Youngest</div></div>\r\n                    <div className=\"but-a\"><div className=\"but-a-text roboto-normal-onyx-16px\">Eldest</div></div>\r\n                  </div>\r\n                  <div className=\"butt-add\" style={{\"display\":\"none\"}}>\r\n                    <div className=\"icon-2\">\r\n                      <div className=\"overlap-group-1\">\r\n                        <img className=\"vector-3\" src=\"img/vector-25@2x.svg\" />\r\n                        <img className=\"vector-4\" src=\"img/vector-26@2x.svg\" />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                \r\n                <button style={{ margin: \"15px\", padding: \"7px\" , width: \"200px\", marginLeft: \"380px\" }} onClick={handleIncrease}>Load More</button>\r\n\r\n                <div id=\"flex-container-add-cards\">\r\n\r\n                {pageall.map((index) => (\r\n                <Person key={index} ida = {index} onAdd={() => { setShowAddcard(!showAddcard); sendSingleCard(index); }} />\r\n                ))}\r\n\r\n                  \r\n                </div>\r\n\r\n\r\n              </div>\r\n              <div className=\"footer\" style={{\"display\":\"none\"}}>\r\n                <div className=\"back border-1px-pink-swan\">\r\n                  <div className=\"left-4\"><img className=\"vector-6\" src=\"img/vector-4@2x.svg\" /></div>\r\n                </div>\r\n                <div className=\"but-number border-1px-pink-swan\"><div className=\"no roboto-normal-mountain-mist-16px\">1</div></div>\r\n                <div className=\"but-all border-1px-pink-swan\">\r\n                  <div className=\"dots\">\r\n                    <img className=\"vector-30\" src=\"img/vector-1@2x.svg\" />\r\n                    <img className=\"vector-7\" src=\"img/vector-1@2x.svg\" />\r\n                    <img className=\"vector-7\" src=\"img/vector-1@2x.svg\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"forward border-1px-pink-swan\">\r\n                  <div className=\"right-1\"><img className=\"vector-6\" src=\"img/vector@2x.svg\" /></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          </>\r\n\r\n        </Route> \r\n\r\n        </Switch>  \r\n\r\n      </Router>\r\n    )\r\n  }\r\n  \r\n  export default Search","C:\\Users\\jsadler\\Documents\\projects-1\\assign-1-frontend\\sw-frontend\\src\\components\\Person.js",["96","97","98","99","100","101","102","103","104","105"],"import { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\n\r\nconst Person = ({ ida, onAdd }) => {\r\n \r\n  // using callbacks for name\r\n  //const [count2, setCount2] = useState(0);    \r\n\r\n  //const { handle } = useParams()\r\n\r\n  //const location = useLocation()\r\n\r\n  //const { person_url_id } = location.state\r\n\r\n  const [ personinfo, setPersonInfo] = useState({})\r\n\r\n  //empty array\r\n  const [ speciesname, setSpeciesName] = useState(\"\")\r\n\r\n \r\n  const [ homeworldname, setHomeWorldName] = useState(\"\")\r\n\r\n\r\n  const [vehs, setVname] = useState([])\r\n\r\n\r\n  const [starshipsname, setStarshipName] = useState([])\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    //fetch(`http://swapi.dev/api/people/${person_url_id}`).then(setUser)\r\n\r\n    const getPerson = async () => {\r\n      const FromServer = await fetchPerson()\r\n      setPersonInfo(FromServer);\r\n    }\r\n\r\n\r\n    // using callbacks for name\r\n    //parentCallback(personinfo.name)\r\n    // set name right\r\n    //setCount2((count2) => count2 + 1);\r\n    //parentCallback(personinfo.person);   \r\n    \r\n    const getSpecies = async () => {\r\n      const FromServer = await fetchPerson()\r\n\r\n      var dataall = FromServer;\r\n      //console.log(dataall.homeworld)\r\n      return dataall.species;\r\n\r\n    }\r\n  \r\n\r\n\r\n    const getHomeWorld = async () => {\r\n      const FromServer = await fetchPerson()\r\n\r\n      var dataall = FromServer;\r\n      //console.log(dataall.homeworld)\r\n      return dataall.homeworld;\r\n\r\n    } \r\n\r\n    const getVs = async () => {\r\n      const FromServer = await fetchPerson()\r\n\r\n      var dataall = FromServer;\r\n      //console.log(dataall.vehicles)\r\n      return dataall.vehicles;\r\n\r\n    }\r\n\r\n    const getStarship = async () => {\r\n      const FromServer = await fetchPerson()\r\n\r\n      var dataall = FromServer;\r\n      //console.log(dataall.starships)\r\n      return dataall.starships;\r\n\r\n    }\r\n       \r\n    //\r\n    getPerson()\r\n    //\r\n\r\n\r\n    //getSpecies()\r\n\r\n    //getHomeWorld()\r\n    \r\n    //getVs()\r\n\r\n    //getStarships()\r\n\r\n\r\n    const getAllSpecies = async () => {\r\n      \r\n      //const urls = await getSpecies()\r\n\r\n      //console.log(urls)\r\n\r\n      // always empty array\r\n      //const FromServer = await fetchUrlArray(urls)\r\n\r\n      //console.log(FromServer.name);\r\n\r\n      //setSpeciesName(FromServer.name);\r\n\r\n      setSpeciesName(\"\");\r\n\r\n\r\n    }\r\n\r\n    getAllSpecies()\r\n\r\n    const getAllHomeWorld = async () => {\r\n      \r\n      const urls = await getHomeWorld()\r\n\r\n      //console.log(urls)\r\n\r\n      const FromServer = await fetchUrlArray(urls)\r\n\r\n      //console.log(FromServer.name);\r\n\r\n      setHomeWorldName(FromServer.name);\r\n\r\n\r\n    }\r\n\r\n    getAllHomeWorld()\r\n\r\n    const getVeh = async () => {\r\n      const urls2 = await getVs()\r\n      \r\n      const FromServer = await fetchMultiUrlArray(urls2)\r\n\r\n      //const vehsFromServer = await fetchMultiUrlArray()\r\n      \r\n      setVname(FromServer)\r\n    }\r\n\r\n    getVeh()\r\n\r\n    //getAllVehicles()   \r\n\r\n    const getAllStarships = async () => {\r\n      const urls2 = await getStarship()\r\n      \r\n      const FromServer = await fetchMultiUrlArray(urls2)\r\n      \r\n      setStarshipName(FromServer)\r\n    }\r\n\r\n    getAllStarships()    \r\n\r\n\r\n\r\n    //single\r\n    const fetchUrlArray = async (urlArray) => {\r\n\r\n      const res = await fetch(urlArray)\r\n      var data = await res.json()\r\n\r\n      //console.log(data);\r\n      return data\r\n      \r\n\r\n    }  \r\n\r\n  }, [ida]) \r\n\r\n\r\n  // multiple\r\n\r\n  const fetchMultiUrlArray = async (urlArray2) => {\r\n\r\n    //console.log(urlArray2)\r\n\r\n    try {\r\n        var data = await Promise.all(\r\n            urlArray2.map(\r\n                url =>\r\n                    fetch(url).then(\r\n                        (response) => response.json()\r\n                    )));\r\n        //return ([{\"name\": \"Snowspeeder\" },{\"name\": \"Snowspeeder\" }])\r\n        //console.log(data)\r\n        return (data)\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n\r\n        throw (error)\r\n    }\r\n    \r\n\r\n\r\n  }\r\n\r\n\r\n    const fetchPerson = async () => {\r\n      const res = await fetch(`http://swapi.dev/api/people/${ida}`)\r\n      //const res = await fetch('http://swapi.dev/api/people/1')\r\n      var data = await res.json()\r\n\r\n      //console.log(data);\r\n\r\n      var dataall = data;\r\n      \r\n      return data\r\n    }\r\n\r\n\r\n//callback for name\r\n//onClick={() => { parentCallback(personinfo.name) }} \r\n\r\n  return (\r\n    <>\r\n        <div className=\"cards-abc-1 overdetailwidth\" style={{height: \"480px\"}}>\r\n\r\n            <div className=\"top-card overdetailwidth\">\r\n              <img className=\"icons-1\" src=\"img/Card.svg\" />\r\n              <button style={{\"marginLeft\": \"160px\" , \"marginTop\": \"-20px\"}} onClick={onAdd}>+</button>\r\n              <h1 className=\"place roboto-normal-white-24px\">{personinfo.name}</h1>\r\n            </div>\r\n\r\n            <div className=\"card-body\" >\r\n              \r\n              <div className=\"card-header\">\r\n                <div className=\"card-header-1\">\r\n                  <div className=\"card-header-2\">\r\n                    <img className=\"icons-2\" src=\"img/Gender-Male.svg\" />\r\n                    <div className=\"birth roboto-normal-onyx-14px\">{personinfo.birth_year}</div>\r\n                  </div>\r\n                  <div className=\"species roboto-normal-onyx-14px\">{speciesname}</div>\r\n                </div>\r\n                <div className=\"divider-card\"></div>\r\n              </div>\r\n\r\n              <div className=\"card-info\">\r\n\r\n                <div className=\"detail-1\">\r\n                  <div className=\"detail-1-top\">\r\n                    <img className=\"icons\" src=\"img/Homeworld.svg\" />\r\n                    <div className=\"homeworld roboto-medium-sonic-silver-10px\">HOMEWORLD</div>\r\n                  </div>\r\n                  <div style={{fontSize:\"10px\"}} className=\"planet roboto-normal-onyx-14px\">{homeworldname}</div>\r\n                </div>\r\n\r\n\r\n\r\n                {vehs.map((v, index) => (                       \r\n\r\n\r\n                  <div key={index} className=\"detail-1\">\r\n                    <div className=\"detail-1-top\">\r\n                      <img className=\"icons\" src=\"img/Vehicle.svg\" />\r\n                      <div className=\"homeworld roboto-medium-sonic-silver-10px\">VEHICLES</div>\r\n                    </div>\r\n                    <div style={{fontSize:\"10px\"}} className=\"planet roboto-normal-onyx-14px\">{v.name}</div>\r\n                  </div>\r\n\r\n\r\n                ))}\r\n\r\n\r\n                {starshipsname.map((v, index) => (  \r\n\r\n                <div key={index} className=\"detail-1\">\r\n                  <div className=\"detail-1-top\">\r\n                    <img className=\"icons\" src=\"img/Starship.svg\" />\r\n                    <div className=\"homeworld roboto-medium-sonic-silver-10px\">STARSHIPS</div>\r\n                  </div>\r\n                  <div style={{fontSize:\"10px\"}} className=\"planet roboto-normal-onyx-14px\">{v.name}</div>\r\n                </div>\r\n                \r\n                ))}   \r\n\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n      \r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Person",["106","107"],"C:\\Users\\jsadler\\Documents\\projects-1\\assign-1-frontend\\sw-frontend\\src\\Deck.js",["108","109","110"],"import { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nconst Deck = ({ }) => {\r\n\r\n    const [items, setcards] = useState([])\r\n\r\n  useEffect(() => {\r\n    const getcards = async () => {\r\n      const cardsFromServer = await fetchcards()\r\n      setcards(cardsFromServer)\r\n    }\r\n\r\n    getcards()\r\n  }, [])\r\n\r\n  // Fetch cards\r\n  const fetchcards = async () => {\r\n    const res = await fetch('http://localhost:5000/alldecks')\r\n    const data = await res.json()\r\n\r\n    return data\r\n  }\r\n\r\n  return (\r\n    <>\r\n\r\n\r\n\r\n\r\n\r\n{items.map(item => (\r\n          <div key={item.id} className=\"cards-abc-1-decker\" >\r\n            <div>{item.name}</div>\r\n            <button>-</button>\r\n            <div>{item.faction}</div>\r\n            <div>{item.card.length}</div>\r\n          </div>\r\n\r\n        ))}\r\n\r\n    </>\r\n\r\n)\r\n}\r\n\r\nexport default Deck ","C:\\Users\\jsadler\\Documents\\projects-1\\assign-1-frontend\\sw-frontend\\src\\components\\Addcard.js",[],"C:\\Users\\jsadler\\Documents\\projects-1\\assign-1-frontend\\sw-frontend\\src\\components\\Adddeck.js",["111"],"import { useState, useEffect } from 'react'\n\nconst Adddeck = ({ onAdd }) => {\n  const [name, setText] = useState('')\n  //const [day, setDay] = useState('')\n  const [faction, setFaction] = useState('')\n  const [card, setCardid] = useState([])\n  //const [reminder, setReminder] = useState(false)\n\n\n  const [items, setcards] = useState([])\n\n  useEffect(() => {\n    const getcards = async () => {\n      const cardsFromServer = await fetchcards()\n      setcards(cardsFromServer)\n    }\n\n    getcards()\n  }, [])\n\n    // Fetch cards\n    const fetchcards = async () => {\n      const res = await fetch('http://localhost:5000/alldecks')\n      const data = await res.json()\n  \n      return data\n    }\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n\n    if (!name) {\n      alert('Please add deck name')\n      return\n    }\n\n    onAdd({ name, faction, card})\n\n    setText('')\n    //setDay('')\n    setFaction('Rebel')\n    setCardid([])\n\n  }\n\n  return (\n    <form className='add-form' onSubmit={onSubmit} id=\"modal-add-card-bg-fix\" style={{width:\"320px\", backgroundColor:\"grey\",padding:\"20px\", borderRadius: \"7px\"}}>\n      \n\n      <div className='form-control'>\n        \n        <label style={{padding:\"2px\", color:\"white\", fontFamily:\"Arial\"}}>Deck Name</label>\n        <input\n          type='text'\n          placeholder='Deck Name'\n          value={name}\n          onChange={(e) => setText(e.target.value)}\n        />\n      </div>\n\n\n      <div className='form-control' style={{padding:\"2px\", color:\"white\", fontFamily:\"Arial\"}}>\n        <label>Rebel</label>\n        <input type=\"radio\" value=\"Rebel\"   onChange={(e) => setFaction(e.target.value)} name=\"faction\" required=\"required\"/> \n        <label>Jedi</label>\n        <input type=\"radio\" value=\"Jedi\"    onChange={(e) => setFaction(e.target.value)} name=\"faction\"/>\n        <label>Empire</label>\n        <input type=\"radio\" value=\"Empire\"  onChange={(e) => setFaction(e.target.value)} name=\"faction\"/>\n        <label>None</label>\n        <input type=\"radio\" value=\"None\"    onChange={(e) => setFaction(e.target.value)} name=\"faction\"/>\n      </div>\n\n\n\n      <input style={{padding:\"12px\", color:\"black\", fontFamily:\"Arial\"}} type='submit' value='Save Card' className='btn btn-block' />\n    </form>\n  )\n}\n\nexport default Adddeck\n",{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":9,"column":8,"nodeType":"118","messageId":"119","endLine":9,"endColumn":14},{"ruleId":"116","severity":1,"message":"120","line":56,"column":9,"nodeType":"118","messageId":"119","endLine":56,"endColumn":23},{"ruleId":"121","severity":1,"message":"122","line":68,"column":20,"nodeType":"123","messageId":"124","endLine":68,"endColumn":22},{"ruleId":"121","severity":1,"message":"122","line":70,"column":27,"nodeType":"123","messageId":"124","endLine":70,"endColumn":29},{"ruleId":"121","severity":1,"message":"122","line":72,"column":27,"nodeType":"123","messageId":"124","endLine":72,"endColumn":29},{"ruleId":"121","severity":1,"message":"122","line":74,"column":27,"nodeType":"123","messageId":"124","endLine":74,"endColumn":29},{"ruleId":"121","severity":1,"message":"122","line":76,"column":27,"nodeType":"123","messageId":"124","endLine":76,"endColumn":29},{"ruleId":"121","severity":1,"message":"122","line":78,"column":27,"nodeType":"123","messageId":"124","endLine":78,"endColumn":29},{"ruleId":"121","severity":1,"message":"122","line":80,"column":27,"nodeType":"123","messageId":"124","endLine":80,"endColumn":29},{"ruleId":"121","severity":1,"message":"122","line":82,"column":27,"nodeType":"123","messageId":"124","endLine":82,"endColumn":29},{"ruleId":"121","severity":1,"message":"122","line":84,"column":27,"nodeType":"123","messageId":"124","endLine":84,"endColumn":29},{"ruleId":"125","severity":1,"message":"126","line":91,"column":6,"nodeType":"127","endLine":91,"endColumn":17,"suggestions":"128"},{"ruleId":"116","severity":1,"message":"129","line":106,"column":9,"nodeType":"118","messageId":"119","endLine":106,"endColumn":19},{"ruleId":"116","severity":1,"message":"130","line":162,"column":9,"nodeType":"118","messageId":"119","endLine":162,"endColumn":19},{"ruleId":"116","severity":1,"message":"131","line":173,"column":9,"nodeType":"118","messageId":"119","endLine":173,"endColumn":23},{"ruleId":"132","severity":1,"message":"133","line":211,"column":13,"nodeType":"134","endLine":211,"endColumn":56},{"ruleId":"132","severity":1,"message":"133","line":218,"column":13,"nodeType":"134","endLine":218,"endColumn":56},{"ruleId":"132","severity":1,"message":"133","line":240,"column":11,"nodeType":"134","endLine":240,"endColumn":72},{"ruleId":"132","severity":1,"message":"133","line":249,"column":17,"nodeType":"134","endLine":249,"endColumn":62},{"ruleId":"132","severity":1,"message":"133","line":296,"column":13,"nodeType":"134","endLine":296,"endColumn":56},{"ruleId":"132","severity":1,"message":"133","line":303,"column":13,"nodeType":"134","endLine":303,"endColumn":56},{"ruleId":"132","severity":1,"message":"133","line":325,"column":11,"nodeType":"134","endLine":325,"endColumn":72},{"ruleId":"132","severity":1,"message":"133","line":333,"column":17,"nodeType":"134","endLine":333,"endColumn":62},{"ruleId":"116","severity":1,"message":"135","line":9,"column":8,"nodeType":"118","messageId":"119","endLine":9,"endColumn":12},{"ruleId":"116","severity":1,"message":"120","line":45,"column":11,"nodeType":"118","messageId":"119","endLine":45,"endColumn":25},{"ruleId":"121","severity":1,"message":"122","line":57,"column":22,"nodeType":"123","messageId":"124","endLine":57,"endColumn":24},{"ruleId":"121","severity":1,"message":"122","line":59,"column":29,"nodeType":"123","messageId":"124","endLine":59,"endColumn":31},{"ruleId":"121","severity":1,"message":"122","line":61,"column":29,"nodeType":"123","messageId":"124","endLine":61,"endColumn":31},{"ruleId":"121","severity":1,"message":"122","line":63,"column":29,"nodeType":"123","messageId":"124","endLine":63,"endColumn":31},{"ruleId":"121","severity":1,"message":"122","line":65,"column":29,"nodeType":"123","messageId":"124","endLine":65,"endColumn":31},{"ruleId":"121","severity":1,"message":"122","line":67,"column":29,"nodeType":"123","messageId":"124","endLine":67,"endColumn":31},{"ruleId":"121","severity":1,"message":"122","line":69,"column":29,"nodeType":"123","messageId":"124","endLine":69,"endColumn":31},{"ruleId":"121","severity":1,"message":"122","line":71,"column":29,"nodeType":"123","messageId":"124","endLine":71,"endColumn":31},{"ruleId":"121","severity":1,"message":"122","line":73,"column":29,"nodeType":"123","messageId":"124","endLine":73,"endColumn":31},{"ruleId":"125","severity":1,"message":"126","line":80,"column":8,"nodeType":"127","endLine":80,"endColumn":19,"suggestions":"136"},{"ruleId":"116","severity":1,"message":"129","line":95,"column":11,"nodeType":"118","messageId":"119","endLine":95,"endColumn":21},{"ruleId":"116","severity":1,"message":"130","line":131,"column":11,"nodeType":"118","messageId":"119","endLine":131,"endColumn":21},{"ruleId":"116","severity":1,"message":"131","line":142,"column":11,"nodeType":"118","messageId":"119","endLine":142,"endColumn":25},{"ruleId":"132","severity":1,"message":"133","line":194,"column":27,"nodeType":"134","endLine":194,"endColumn":80},{"ruleId":"132","severity":1,"message":"133","line":195,"column":27,"nodeType":"134","endLine":195,"endColumn":82},{"ruleId":"132","severity":1,"message":"133","line":203,"column":27,"nodeType":"134","endLine":203,"endColumn":82},{"ruleId":"132","severity":1,"message":"133","line":204,"column":27,"nodeType":"134","endLine":204,"endColumn":82},{"ruleId":"132","severity":1,"message":"133","line":220,"column":56,"nodeType":"134","endLine":220,"endColumn":111},{"ruleId":"132","severity":1,"message":"133","line":222,"column":56,"nodeType":"134","endLine":222,"endColumn":111},{"ruleId":"132","severity":1,"message":"133","line":230,"column":25,"nodeType":"134","endLine":230,"endColumn":80},{"ruleId":"132","severity":1,"message":"133","line":231,"column":25,"nodeType":"134","endLine":231,"endColumn":81},{"ruleId":"132","severity":1,"message":"133","line":243,"column":25,"nodeType":"134","endLine":243,"endColumn":80},{"ruleId":"132","severity":1,"message":"133","line":244,"column":25,"nodeType":"134","endLine":244,"endColumn":80},{"ruleId":"132","severity":1,"message":"133","line":266,"column":43,"nodeType":"134","endLine":266,"endColumn":97},{"ruleId":"132","severity":1,"message":"133","line":271,"column":21,"nodeType":"134","endLine":271,"endColumn":76},{"ruleId":"132","severity":1,"message":"133","line":272,"column":21,"nodeType":"134","endLine":272,"endColumn":75},{"ruleId":"132","severity":1,"message":"133","line":273,"column":21,"nodeType":"134","endLine":273,"endColumn":75},{"ruleId":"132","severity":1,"message":"133","line":277,"column":44,"nodeType":"134","endLine":277,"endColumn":96},{"ruleId":"116","severity":1,"message":"137","line":2,"column":8,"nodeType":"118","messageId":"119","endLine":2,"endColumn":17},{"ruleId":"116","severity":1,"message":"138","line":3,"column":10,"nodeType":"118","messageId":"119","endLine":3,"endColumn":21},{"ruleId":"116","severity":1,"message":"139","line":48,"column":11,"nodeType":"118","messageId":"119","endLine":48,"endColumn":21},{"ruleId":"125","severity":1,"message":"140","line":175,"column":6,"nodeType":"127","endLine":175,"endColumn":11,"suggestions":"141"},{"ruleId":"116","severity":1,"message":"142","line":213,"column":11,"nodeType":"118","messageId":"119","endLine":213,"endColumn":18},{"ruleId":"132","severity":1,"message":"133","line":227,"column":15,"nodeType":"134","endLine":227,"endColumn":61},{"ruleId":"132","severity":1,"message":"133","line":237,"column":21,"nodeType":"134","endLine":237,"endColumn":74},{"ruleId":"132","severity":1,"message":"133","line":249,"column":21,"nodeType":"134","endLine":249,"endColumn":70},{"ruleId":"132","severity":1,"message":"133","line":262,"column":23,"nodeType":"134","endLine":262,"endColumn":70},{"ruleId":"132","severity":1,"message":"133","line":276,"column":21,"nodeType":"134","endLine":276,"endColumn":69},{"ruleId":"112","replacedBy":"143"},{"ruleId":"114","replacedBy":"144"},{"ruleId":"116","severity":1,"message":"137","line":2,"column":8,"nodeType":"118","messageId":"119","endLine":2,"endColumn":17},{"ruleId":"116","severity":1,"message":"138","line":3,"column":10,"nodeType":"118","messageId":"119","endLine":3,"endColumn":21},{"ruleId":"145","severity":1,"message":"146","line":5,"column":15,"nodeType":"147","messageId":"124","endLine":5,"endColumn":18},{"ruleId":"116","severity":1,"message":"148","line":11,"column":10,"nodeType":"118","messageId":"119","endLine":11,"endColumn":15},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"no-unused-vars","'Search' is defined but never used.","Identifier","unusedVar","'handleDecrease' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'page1', 'page2', 'page3', 'page4', 'page5', 'page6', 'page7', 'page8', and 'page9'. Either include them or remove the dependency array.","ArrayExpression",["151"],"'fetchcards' is assigned a value but never used.","'deletecard' is assigned a value but never used.","'toggleReminder' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Deck' is defined but never used.",["152"],"'PropTypes' is defined but never used.","'useLocation' is defined but never used.","'getSpecies' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchPerson'. Either include it or remove the dependency array.",["153"],"'dataall' is assigned a value but never used.",["149"],["150"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'items' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},{"desc":"154","fix":"156"},{"desc":"157","fix":"158"},"Update the dependencies array to be: [page1, page2, page3, page4, page5, page6, page7, page8, page9, pagecount]",{"range":"159","text":"160"},{"range":"161","text":"160"},"Update the dependencies array to be: [fetchPerson, ida]",{"range":"162","text":"163"},[2472,2483],"[page1, page2, page3, page4, page5, page6, page7, page8, page9, pagecount]",[2513,2524],[3437,3442],"[fetchPerson, ida]"]